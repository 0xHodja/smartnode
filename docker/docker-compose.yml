version: "3.7"
services:
  traefik:
    image: traefik
    command: [
      "--api",
      "--docker",
      "--docker.watch",
      "--docker.domain=smartnode.localhost",
    ]
    restart: always
    ports:
      - "9080:8080" # Web UI (enabled by --api)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      net:
        aliases:
          - "eth1.rpc.smartnode.localhost"
          - "beacon.ws.smartnode.localhost"
  pow:
    image: ethereum/client-go
    restart: on-failure
    volumes:
      - eth1clientdata:/ethclient
      - ./setup/pow:/setup/pow:ro
    networks:
      - net
    entrypoint: [sh, -c, "\
      /setup/pow/start.sh geth 77 \
      enode://6114b79e7928bfb19ff8600bad6e09a49cfc53f7d9513bb0e854566102ee04bac8f494472bcc812211c2cc50684f8a04320d23c17410b52c6175e8246b5a3307@3.216.221.20:30305 \
      RP2Beta-Node \
      rp2testbeta@3.216.221.20 \
    "]
    labels:
      - traefik.enable=true
      - traefik.port=8545
      - traefik.docker.network=net
      - traefik.frontend.priority=10
      - traefik.frontend.rule=Host:eth1.rpc.smartnode.localhost
      - traefik.backend.loadbalancer.stickiness=true
      - traefik.backend.loadbalancer.stickiness.cookieName=smartnodeEth1
      - traefik.backend.loadbalancer.method=drr
      - traefik.backend=eth1.rpc.smartnode
  beacon:
    image: rocketpool/beacon-chain-simulator:v0.0.1
    restart: on-failure
    volumes:
      - eth2clientdata:/ethclient
    networks:
      - net
    command: [
      "--powHost", "http://eth1.rpc.smartnode.localhost",
      "--depositContract", "0xb8c763648c1f251006dd275662f6e7c8e2eb135a",
      "--withdrawalContract", "0x23104b8a290316a1708dde6dda1803d30b9cb833",
      "--from", "0x2f6812e7005c61835b12544eeb45958099ef45f4",
      "--database", "/ethclient/beacon.json",
    ]
    labels:
      - traefik.enable=true
      - traefik.port=9545
      - traefik.docker.network=net
      - traefik.frontend.priority=10
      - traefik.frontend.rule=Host:beacon.ws.smartnode.localhost
      - traefik.backend.loadbalancer.stickiness=true
      - traefik.backend.loadbalancer.stickiness.cookieName=smartnodeBeacon
      - traefik.backend.loadbalancer.method=drr
      - traefik.backend=beacon.ws.smartnode
  minipools:
    image: rocketpool/smartnode-minipools:v0.0.1
    restart: on-failure
    volumes:
      - ${RP_PATH}:/.rocketpool
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - net
    command: [
      "${RP_PATH}",
      "rocketpool/smartnode-minipool:v0.0.1",
      "${COMPOSE_PROJECT_NAME}_minipool_",
      "${COMPOSE_PROJECT_NAME}_net",
    ]
  node:
    image: rocketpool/smartnode-node:v0.0.1
    restart: on-failure
    volumes:
      - ${RP_PATH}:/.rocketpool
    networks:
      - net
  watchtower:
    image: rocketpool/smartnode-watchtower:v0.0.1
    restart: on-failure
    volumes:
      - ${RP_PATH}:/.rocketpool
    networks:
      - net
networks:
  net:
volumes:
  eth1clientdata:
  eth2clientdata:
